{
  "name": "Discord AI-powered bot",
  "nodes": [
    {
      "parameters": {},
      "id": "6f188270-2c08-491f-bf52-c4a152b33aa0",
      "name": "When clicking \"Execute Workflow\"",
      "type": "n8n-nodes-base.manualTrigger",
      "position": [
        380,
        440
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "d0cdd428-be96-4821-85bc-65342cf928d0",
        "options": {}
      },
      "id": "e4839de2-fc04-40b0-b6bc-596455ad93fe",
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "position": [
        380,
        240
      ],
      "webhookId": "d0cdd428-be96-4821-85bc-65342cf928d0",
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "15dcafe1-6361-4775-ace0-e34fd2a143b4",
      "name": "No Operation, do nothing",
      "type": "n8n-nodes-base.noOp",
      "position": [
        1280,
        600
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "resource": "chat",
        "model": "gpt-4",
        "prompt": {
          "messages": [
            {
              "role": "system",
              "content": "Act as a service desk agent and help to categorize user messages. Return back only JSON without quotations. Do not return anything else."
            },
            {
              "content": "=Here is a user feedback: \"{{ $json.body.feedback }}\". Please analyse it and put into one of the categories:\n1. \"server-request\" if an user is requesting a spellbreak server to play on. Take note if the message mentions a region and a gamemode, if so log these as well.\n2. \"play-request for assistance with setting up the game-client / installation of the game / how to play\" if a user is requesting assistance with setting up the game client or is asking about installation or how to play the game, open up a how-to-play ticket.\n3. \"ticket\" for everything else. This will be processed as normal by customer support team.\n\n- Please return back a JSON with the following structure: category (string), request (string), instruction (string).\n- Category must match the analysed category. request must match the original text. instruction should contain a text for the moderation team with a one sentense summary of the request. Please be polite and friendly to the colleagues."
            }
          ]
        },
        "options": {
          "maxTokens": 500,
          "temperature": 0.5
        },
        "requestOptions": {}
      },
      "id": "0d28fe8e-da80-458b-9a75-d316019cb3ae",
      "name": "Analyze user request",
      "type": "n8n-nodes-base.openAi",
      "position": [
        580,
        340
      ],
      "typeVersion": 1,
      "credentials": {
        "openAiApi": {
          "id": "5YXyGXYyACoLjs6S",
          "name": "Litellm-account"
        }
      }
    },
    {
      "parameters": {
        "dataType": "string",
        "value1": "={{ $json.gpt_reply.category.toLowerCase() }}",
        "rules": {
          "rules": [
            {
              "value2": "server-request"
            },
            {
              "value2": "play-request",
              "output": 1
            },
            {
              "value2": "ticket",
              "output": 2
            }
          ]
        },
        "fallbackOutput": 3
      },
      "id": "ce1c4198-ce21-4436-9ccb-4a2a078cd06e",
      "name": "Select category",
      "type": "n8n-nodes-base.switch",
      "position": [
        1000,
        340
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "gpt_reply",
              "value": "={{ JSON.parse( $json.message.content.replace(/\\n(?=[^\"]*\"(?:[^\"]*\"[^\"]*\")*[^\"]*$)/g, '\\\\n')) }}"
            }
          ]
        },
        "options": {}
      },
      "id": "839cc38d-b393-4fc1-a068-47a8fcf55e3f",
      "name": "Parse JSON",
      "type": "n8n-nodes-base.set",
      "position": [
        800,
        340
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "command": "curl -H \"Content-Type: application/json\" \n    -H \"Authorization: Bearer $TOKEN\" \n    -X POST -d ' {\n        \"image\": \"linode/debian10\",\n        \"root_pass\": \"aComplexP@assword\",\n        \"label\": \"linode-interfaces-3\",\n        \"type\": \"g6-standard-2\",\n        \"region\": \"{{region}}\"\n    }' \n    https://api.dev.linode.com/v4/linode/instances"
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        1280,
        120
      ],
      "id": "cfac4549-4a09-45ac-bcac-505154d8be72",
      "name": "server-request"
    },
    {
      "parameters": {
        "webhookUri": "https://discord.com/api/webhooks/<YOUR WEBHOOK HERE>",
        "text": "={{ $json.gpt_reply.instruction }}",
        "options": {}
      },
      "id": "9a5e5335-9e6c-4f1f-a0f0-b1b022956549",
      "name": "play-request",
      "type": "n8n-nodes-base.discord",
      "position": [
        1280,
        280
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "webhookUri": "https://discord.com/api/webhooks/<YOUR WEBHOOK HERE>",
        "text": "={{ $json.gpt_reply.instruction }}",
        "options": {}
      },
      "id": "d6d6250a-3a24-49f1-a597-47ebc179949c",
      "name": "ticket",
      "type": "n8n-nodes-base.discord",
      "position": [
        1280,
        440
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "command": "ansible command to fire up the notebook with the region and gametype implemented"
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        1500,
        120
      ],
      "id": "5d948f90-7995-4f6e-9e57-67f3524b7912",
      "name": "run-ansible"
    }
  ],
  "pinData": {},
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "Analyze user request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Parse JSON": {
      "main": [
        [
          {
            "node": "Select category",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Select category": {
      "main": [
        [
          {
            "node": "server-request",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "play-request",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "ticket",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Analyze user request": {
      "main": [
        [
          {
            "node": "Parse JSON",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When clicking \"Execute Workflow\"": {
      "main": [
        [
          {
            "node": "Analyze user request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "server-request": {
      "main": [
        [
          {
            "node": "run-ansible",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {},
  "versionId": "9e86ebf7-2bd3-434c-a021-be4827fe976c",
  "meta": {
    "templateId": "1938",
    "instanceId": "c6eb3de749eae29ce79a7fd8cb4b53ae42938917db5e1e4fee17ec37000e40bc"
  },
  "id": "P1RRutUsrasg5jea",
  "tags": []
}